name: Build and deploy CI Images

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build-images:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image:
          - name: ghcr.io/foresightminingsoftwarecorporation/rust-test:rust-1.74
            context: docker/rust-tests
            args: |
              RUST_VERSION=1.74
          - name: ghcr.io/foresightminingsoftwarecorporation/rust-test:rust-1.75
            context: docker/rust-tests
            args: |
              RUST_VERSION=1.75
          - name: ghcr.io/foresightminingsoftwarecorporation/rust-test:rust-1.76
            context: docker/rust-tests
            args: |
              RUST_VERSION=1.76
          - name: ghcr.io/foresightminingsoftwarecorporation/rust-test:rust-1.77
            context: docker/rust-tests
            args: |
              RUST_VERSION=1.77
          - name: ghcr.io/foresightminingsoftwarecorporation/ci:latest
            context: docker/ci
            args: |
              RUST_VERSION=1.77
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
      - name: Login to ACR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      # Build and Push Image with Cache
      - name: Build & Push
        uses: docker/build-push-action@v3
        with:
          context: ${{ matrix.image.context }}
          push: true
          build-args: |
            ${{ matrix.image.args }}
            GITHUB_RUNNER_VERSION=latest
          tags: |
            ${{ matrix.image.name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
  deploy-images:
    runs-on: ci-scale-set
    needs:
      - build-images
    strategy:
      matrix:
        image:
          - name: ghcr.io/foresightminingsoftwarecorporation/rust-test:rust-1.74
            scaleset: rust-1-74-scale-set
          - name: ghcr.io/foresightminingsoftwarecorporation/rust-test:rust-1.75
            scaleset: rust-1-75-scale-set
          - name: ghcr.io/foresightminingsoftwarecorporation/rust-test:rust-1.76
            scaleset: rust-1-76-scale-set
          - name: ghcr.io/foresightminingsoftwarecorporation/rust-test:rust-1.77
            scaleset: rust-1-77-scale-set
          - name: ghcr.io/foresightminingsoftwarecorporation/ci:latest
            scaleset: ci-scale-set
    steps:
      - name: Pull k3s config from vault
        id: secrets
        uses: hashicorp/vault-action@v3.0.0
        with:
          method: jwt
          url: https://vault.foresightmining.com:8200
          path: github
          role: gh-actions-vpn-access
          secrets: |
            kv-v2/data/auth/k3s kubeconfig | K3S_KUBE_CONFIG
      - name: Delete ImagePullJob if exists
        shell: bash
        working-directory: .
        env:
          KUBECONFIG: kubeconfig.yaml
        run: |
          echo '${{ steps.secrets.outputs.K3S_KUBE_CONFIG }}' >> kubeconfig.yaml
          kubectl delete imagepulljob pull-image-for-${{ matrix.image.scaleset }} | true
          cat - <<EOF >> pull-job.yaml
          apiVersion: apps.kruise.io/v1alpha1
          kind: ImagePullJob
          metadata:
            name: pull-image-for-${{ matrix.image.scaleset }}
          spec:
            image: ${{ matrix.image.name }}
            parallelism: 1
            selector:
              names:
              - fslabs-worker-2
              - fslabs-worker-4
              - fslabs-worker-5
          EOF
          kubectl apply -f pull-job.yaml
          until kubectl get imagepulljob pull-image-for-${{ matrix.image.scaleset }} -o jsonpath='{.status.message}' | grep -m 1 "job has completed"; do : ; done
