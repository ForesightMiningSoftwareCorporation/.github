on:
  workflow_call:
    outputs:
      released:
        description: Was the crate released
        value: 'true'
    inputs:
      working_directory:
        type: string
        description: "Binary to build"
        default: "."
      toolchain:
        type: string
        description: "Rust toolchain to use"
        default: "stable"
      docker_context:
        type: string
        description: "Path to docker context"
        default: "default-docker-context-replace-me"
      dockerfile:
        type: string
        description: "The path to the Dockerfile to use"
        default: Dockerfile
      image:
        type: string
        required: true
        description: "Docker image name"
      registry:
        type: string
        default: "oreprohub.azurecr.io"
        description: "Docker registry"

jobs:
  docker_publish:
    runs-on: [self-hosted, standard]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: SebRollen/toml-action@v1.0.2
        id: read_version
        with:
          file: "${{ inputs.working_directory }}/Cargo.toml"
          field: "package.version"

      # Login to registry (ACR)
      - name: Login to oreprohub
        uses: docker/login-action@v3
        if: ${{ inputs.registry == 'oreprohub.azurecr.io' }}
        with:
          registry: ${{ inputs.registry }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Login to oricacrplatformfslabs001
        uses: docker/login-action@v3
        with:
          registry: oricacrplatformfslabs001.azurecr.io
          username: ${{ secrets.DOCKER_ORICACRPLATFORMFSLABS001_AZURECR_IO_USERNAME }}
          password: ${{ secrets.DOCKER_ORICACRPLATFORMFSLABS001_AZURECR_IO_PASSWORD }}

      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ inputs.toolchain }}

      - uses: ForesightMiningSoftwareCorporation/github/.github/actions/login-private-registry@v1
        with:
          private_key: ${{ secrets.CARGO_PRIVATE_REGISTRY_SSH_PRIVATE_KEY }}
          host: ${{ secrets.CARGO_PRIVATE_REGISTRY_HOST }}
          name: ${{ secrets.CARGO_PRIVATE_REGISTRY_NAME }}
          token: ${{ secrets.CARGO_PRIVATE_REGISTRY_TOKEN }}
          additional_private_keys: |
            ${{ secrets.OREPROLIB_SSH_PRIVATE_KEY }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Use user-agent for private registry
        shell: bash
        run: |
          echo "\"shipyard ${{ secrets.CARGO_PRIVATE_REGISTRY_TOKEN  }}\"" > ./shipyard_token

      - name: Build & Push
        uses: docker/build-push-action@v3
        with:
          context: ${{ inputs.docker_context == 'default-docker-context-replace-me' && inputs.working_directory || inputs.docker_context }}
          push: true
          file: "${{ inputs.working_directory }}/${{ inputs.dockerfile }}"
          ssh: default=${{ env.SSH_AUTH_SOCK }}
          secrets: |
            node_auth_token="${{ secrets.GITHUB_TOKEN }}"
            cargo_http_user_agent="shipyard ${{ secrets.CARGO_PRIVATE_REGISTRY_TOKEN  }}"
            cargo_private_registry_token="${{ secrets.CARGO_PRIVATE_REGISTRY_TOKEN  }}"
            cargo_private_registry_name="${{ secrets.CARGO_PRIVATE_REGISTRY_NAME  }}"
          tags: |
            ${{ inputs.registry }}/${{ inputs.image }}:${{ steps.read_version.outputs.value }}
            ${{ inputs.registry }}/${{ inputs.image }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
