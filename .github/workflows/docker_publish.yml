on:
  workflow_call:
    inputs:
      working-directory:
        type: string
        description: "Binary to build"
        default: "."
      dockerfile:
        type: string
        description: "The path to the Dockerfile to use"
        default: Dockerfile
      image:
        type: string
        required: true
        description: "Docker image name"

jobs:
  docker_publish:
    runs-on: ubuntu-latest
    env:
      PRIVATE_REGISTRY_TOKEN: ${{ secrets.private-registry-token }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Login to registry (ACR)
      - name: Login to ACR
        uses: docker/login-action@v2
        with:
          registry: oreprohub.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - uses: SebRollen/toml-action@v1.0.2
        id: read_version
        with:
          file: '${{ inputs.working-directory }}/Cargo.toml'
          field: 'package.version'

      - name: Check Docker version exists
        id: check_version_exists
        uses: foresightminingsoftwarecorporation/docker-check-exists@v1
        with:
          repository: oreprohub.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
          image_name: ${{ inputs.image }}
          version: ${{ steps.read_version.outputs.value }}

      - uses: ForesightMiningSoftwareCorporation/github/.github/actions/login-private-registry@v1.1.0
        if: ${{ fromJSON(steps.check_version_exists.outputs.exists) == false }}
        with:
          private_key: ${{ secrets.CARGO_PRIVATE_REGISTRY_SSH_PRIVATE_KEY }}
          host: ${{ secrets.CARGO_PRIVATE_REGISTRY_HOST }}
          name: ${{ secrets.CARGO_PRIVATE_REGISTRY_NAME }}
          token: ${{ secrets.CARGO_PRIVATE_REGISTRY_TOKEN }}

      - name: Set up Docker Buildx
        if: ${{ fromJSON(steps.check_version_exists.outputs.exists) == false }}
        uses: docker/setup-buildx-action@v2

      - name: Use user-agent for private registry
        if: ${{ fromJSON(steps.check_version_exists.outputs.exists) == false }}
        shell: bash
        run: |
          echo "\"shipyard ${{ secrets.CARGO_PRIVATE_REGISTRY_TOKEN  }}\"" > ./shipyard_token

      - name: Build & Push
        uses: docker/build-push-action@v3
        if: ${{ fromJSON(steps.check_version_exists.outputs.exists) == false }}
        with:
          context: ${{ inputs.working-directory }}
          push: true
          file: "${{ inputs.working-directory }}/${{ inputs.dockerfile }}"
          ssh:
            default=${{ env.SSH_AUTH_SOCK }}
          secrets: |
            cargo_http_user_agent="shipyard ${{ secrets.CARGO_PRIVATE_REGISTRY_TOKEN  }}"
          secret-files: |
            shipyard_token=./shipyard_token
          tags: |
            oreprohub.azurecr.io/${{ inputs.image }}:${{ steps.read_version.outputs.value }}
            oreprohub.azurecr.io/${{ inputs.image }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max