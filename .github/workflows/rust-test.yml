on:
  workflow_call:
    inputs:
      source_ref:
        required: true
        type: string
        description: Checkout ref
      required_packages:
        type: string
        default: ""
        description: Package that needs to be installed before Rust compilation can happens
      toolchain:
        type: string
        default: "stable"
        description: Rust toolchain to install
      additional_args:
        type: string
        default: ""
        description: Additional argument to pass to cargo

    secrets:
      PAT_TOKEN:
        required: true
      PRIVATE_KEYS:
        required: false
        description: Private keys that need to be added to the ssh-agent

jobs:
  test:
    name: Rust Test (fmt and clippy)
    runs-on: ubuntu-latest
    env:
      SSH_PRIVATE_KEYS: ${{secrets.SSH_PRIVATE_KEYS}}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          github-token: ${{ secrets.PAT_TOKEN }}
          ref: ${{ inputs.source_ref }}

      - name: Access private repos
        if: env.SSH_PRIVATE_KEYS != ''
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: |
            ${{ env.SSH_PRIVATE_KEYS }}

      - name: Update Packages
        if: inputs.required_packages != ''
        run: sudo apt-get update -yq && sudo apt-get install -yq --no-install-recommends ${{ inputs.required_packages }}

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ inputs.toolchain }}
          override: true
          components: rustfmt, clippy

      - name: Set up cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: ${{ inputs.additional_args }}

      - name: run clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: ${{ inputs.additional_args }} -- -D warnings
